name: build-python-wheels

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  macos:
    runs-on: macos-latest
    strategy:
      matrix:
        python-version: ['3.10']
        target: [x86_64, aarch64, universal2-apple-darwin]

    steps:
      - name: Check out the main repository
        uses: actions/checkout@v4

      - name: Check out regorus code
        uses: actions/checkout@v4
        with:
          repository: haim-shulner/regorus
          path: .
          ref: main

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Build wheels
        uses: PyO3/maturin-action@63b75c597b83e247fbf4fb7719801cc4220ae9f3 # v1.43.0
        with:
          target: ${{ matrix.target }}
          args: --release --out dist-${{ matrix.target }} --find-interpreter --manifest-path bindings/python/Cargo.toml
          sccache: 'true'
      
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: macos-${{ matrix.target }}
          path: dist-${{ matrix.target }}
          overwrite: true
  
  macos-test:
    runs-on: macos-latest
    needs: [linux, macos, windows]
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']
        target: [x86_64, aarch64, universal2-apple-darwin]
    
    steps:
      - name: Check out the main repository
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Download Artifact
        uses: actions/download-artifact@v4

      - name: Copy all .whl files to wheels directory
        run: |
          cp linux-*/*.whl wheels/
          cp macos-*/*.whl wheels/ 
          cp windows-*/*.whl wheels/
        
      - name: Install dependencies
        run: |
          ls -R wheels/
          python -m pip install --upgrade pip
          python -m pip install --find-links=./wheels regorus
          python -m pip install pytest
        
      - name: Run test
        run: |
          pytest test_regorus_build.py

  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10']
        target: [x86_64]

    steps:
      - name: Check out the main repository
        uses: actions/checkout@v4
      
      - name: Check out regorus code
        uses: actions/checkout@v4
        with:
          repository: haim-shulner/regorus
          path: .
          ref: main

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
        
      - name: Build wheels
        uses: PyO3/maturin-action@63b75c597b83e247fbf4fb7719801cc4220ae9f3 # v1.43.0
        with:
          target: ${{ matrix.target }}
          args: --release --out dist-${{ matrix.target }} --find-interpreter --manifest-path bindings/python/Cargo.toml
          sccache: 'true'
          manylinux: auto
      
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: linux-${{ matrix.target }}
          path: dist-${{ matrix.target }}
          overwrite: true
  
  linux-test:
    runs-on: ubuntu-latest
    needs: [linux, macos, windows]
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12']
        target: [x86_64]
    
    steps:
      - name: Check out the main repository
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Download Artifact
        uses: actions/download-artifact@v4

      - name: Copy all .whl files to wheels directory
        run: |
          cp linux-*/*.whl wheels/
          cp macos-*/*.whl wheels/ 
          cp windows-*/*.whl wheels/
        
      - name: Install dependencies
        run: |
          ls -R wheels/
          python -m pip install --upgrade pip
          python -m pip install --find-links=./wheels regorus
          python -m pip install pytest

      - name: Run test
        run: |
          pytest test_regorus_build.py
  
  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: ['3.10']
        target: [x64, x86]

    steps:
      - name: Check out the main repository
        uses: actions/checkout@v4

      - name: Check out regorus code
        uses: actions/checkout@v4
        with:
          repository: haim-shulner/regorus
          path: .
          ref: main

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.target }}

      - name: Build wheels
        uses: PyO3/maturin-action@63b75c597b83e247fbf4fb7719801cc4220ae9f3 # v1.43.0
        with:
          target: ${{ matrix.target }}
          args: --release --out dist-${{ matrix.target }} --find-interpreter --manifest-path bindings/python/Cargo.toml
          sccache: 'true'
      
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: windows-${{ matrix.target }}
          path: dist-${{ matrix.target }}
          overwrite: true
  
  windows-test:
    runs-on: ubuntu-latest
    needs: [linux, macos, windows]
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12']
        target: [x64, x86]
    
    steps:
      - name: Check out the main repository
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Download Artifact
        uses: actions/download-artifact@v4

      - name: Copy all .whl files to wheels directory
        shell: pwsh
        run: |
          Copy-Item -Path 'linux-*/*.whl' -Destination 'wheels' -Force
          Copy-Item -Path 'macos-*/*.whl' -Destination 'wheels' -Force
          Copy-Item -Path 'windows-*/*.whl' -Destination 'wheels' -Force
        
      - name: Install dependencies
        shell: pwsh
        run: |
          Get-ChildItem -Path wheels -Recurse
          pip install --upgrade pip
          pip install --find-links=./wheels regorus
          pip install pytest
      
      - name: Run test
        run: |
          pytest test_regorus_build.py
  
  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [linux-test, macos-test, windows-test]
    steps:
    - name: Check out the main repository
      uses: actions/checkout@v4
    
    - name: Download Artifact
      uses: actions/download-artifact@v4
    
    - name: Copy all .whl files from linux/*/ to wheels directory
      run: |
        cp linux-*/*.whl wheels/
        cp macos-*/*.whl wheels/ 
        cp windows-*/*.whl wheels/
    
    - name: Display structure of wheel files
      run: ls -R wheels/
    
    - name: Commit and push wheels to repository
      if: github.ref == 'refs/heads/main'
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git add -f wheels
        git commit -m "Add built wheels to wheels directory"
        git push -f origin main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
